name: Publish All Packages
on:
  push:
    branches:
      - main
jobs:
  publish-gpr:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: actions/setup-node@v1
        with:
          node-version: 14.3.0
      - run: git config --global user.email "example@gmail.com"
      - run: git config --global user.name "Builder"
      - name: Install Packages
        run: yarn
      - name: Build
        run: yarn build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Package Win
        run: yarn dist:win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: setup.exe
          path: outputs/*.exe



      # - name: Publish Mac
        # run: yarn dist:mac
      # - name: Upload win artifact
      #   uses: skx/github-action-publish-binaries@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     args: '*.exe'
  
      # - name: Upload mac artifact
      #   uses: skx/github-action-publish-binaries@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     args: '*.dmg'
      # - name: Build/release Electron app
      #   uses: samuelmeuli/action-electron-builder@v1
      #   with:
      #     # GitHub token, automatically provided to the action
      #     # (No need to define this secret in the repo settings)
      #     github_token: ${{ secrets.github_token }}

      #     # If the commit is tagged with a version (e.g. "v1.0.0"),
      #     # release the app after building
      #     release: ${{ startsWith(github.ref, 'refs/tags/v') }}
  